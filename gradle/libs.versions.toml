[versions]
iosTestTask = "0"
kotlin = "1.6.10"

# Gradle
androidGradlePlugin = "7.0.2"
gradle = "gradle-7.2-bin"


## SDK Versions
minSdk = "23"
targetSdk = "31"
compileSdk = "31"

# Dependencies
# https://kotlinlang.org/docs/mobile/concurrency-and-coroutines.html#multithreaded-coroutines
coroutines-native = "1.6.0-native-mt"
multiplatformSettings = "0.8.1"
ktor = "1.6.7"
sqlDelight = "1.5.3"
openapiGenerator = "5.3.0"

[libraries]

android-desugaring = { module = "com.android.tools:desugar_jdk_libs", version = "1.1.5" }
androidx-core = { module = "androidx.core:core-ktx", version = "1.6.0" }
androidx-test-junit = { module = "androidx.test.ext:junit", version = "1.1.3" }

coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines-native" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines-native" }

gradlePlugin-android = { module = "com.android.tools.build:gradle", version = "7.0.3" }
gradlePlugin-kotlinSerialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
gradlePlugin-ktlint = { module = "org.jlleitschuh.gradle:ktlint-gradle", version = "10.2.0" }
gradlePlugin-sqlDelight = { module = "com.squareup.sqldelight:gradle-plugin", version.ref = "sqlDelight" }
gradlePlugin-openapi = { module = "org.openapitools:openapi-generator-gradle-plugin", version.ref = "openapiGenerator" }

junit = { module = "junit:junit", version = "4.13.2" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-ios = { module = "io.ktor:ktor-client-ios", version.ref = "ktor" }
ktor-client-json = { module = "io.ktor:ktor-client-json", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }

multiplatformSettings-common = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
multiplatformSettings-test = { module = "com.russhwolf:multiplatform-settings-test", version.ref = "multiplatformSettings" }

sqlDelight-android = { module = "com.squareup.sqldelight:android-driver", version.ref = "sqlDelight" }
sqlDelight-coroutinesExt = { module = "com.squareup.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }
sqlDelight-native = { module = "com.squareup.sqldelight:native-driver", version.ref = "sqlDelight" }
sqlDelight-runtime = { module = "com.squareup.sqldelight:runtime", version.ref = "sqlDelight" }

[bundles]

gradlePlugins = [
    "gradlePlugin-android",
    "gradlePlugin-kotlinSerialization",
    "gradlePlugin-sqlDelight",
    "gradlePlugin-openapi"
]
ktor-common = ["ktor-client-core", "ktor-client-logging", "ktor-client-serialization"]
shared-commonTest = [
    "multiplatformSettings-test"
]
shared-androidTest = [
    "androidx-test-junit",
    "coroutines-test"
]